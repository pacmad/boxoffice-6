{"version":3,"sources":["components/Movie.js","Firestore.js","modules/movies.js","containers/MovieContainer.js","pages/MoviePage.js","components/MovieList.js","containers/MovieListContainer.js","pages/MovieListPage.js","components/Login.js","containers/LoginContainer.js","pages/LoginPage.js","components/Header.js","containers/HeaderContainer.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["MovieContainer","styled","div","MovieInfo","Img","img","Title","h2","List","ul","Plot","h3","PlotContent","p","Comment","CommentBox","CommentText","textarea","CommnetButton","button","CommentList","CommentItem","li","CommentDelete","Movie","movie","isLogin","comments","onChange","onClick","onDelete","console","log","src","poster","alt","title","openDt","genre","runtime","grade","director","actors","plot","placeholder","readOnly","map","content","index","key","text","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","SET_HEADER_VISIBILITY","SET_LOGIN","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","SET_LOGOUT","GET_MOVIES","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIE","GET_MOVIE_SUCCESS","GET_MOVIE_ERROR","GET_COMMENT_SUCCESS","GET_COMMENT_ERROR","goToHome","dispatch","getState","history","push","setHeaderVisibility","visible","a","type","setLogin","provider","id","collection","where","get","then","snapshot","empty","doc","set","merge","e","setLogout","setMovies","rankingData","Promise","resolve","axios","params","ServiceKey","movieNm","releaseDts","replace","data","items","Data","hasOwnProperty","detailData","Result","posters","includes","substring","indexOf","movieCd","moment","format","rating","ratingGrade","directorNm","actor","actorNm","getData","exists","childData","getMovies","date","targetDt","boxOfficeResult","dailyBoxOfficeList","payload","i","length","getMovie","movieId","error","getComment","undefined","forEach","comment","addComment","changComment","deleteComment","docRef","writer","update","filter","initialState","login","status","movies","loading","useSelector","state","useDispatch","useEffect","target","value","item","alert","MoviePage","match","MovieListContainer","Search","SearchData","input","SearchButton","DateInfo","span","Movies","Rank","h1","Poster","MovieTitle","MovieList","toString","to","changeDate","MovieListPage","Container","HomeTitle","HomeLink","Link","KakaoButton","KakaoLogin","GoogleButton","Login","responseGoogle","responseKakao","responseFail","clientId","render","renderProps","disabled","onSuccess","onFailure","jsKey","buttonText","LoginContainer","loginProvider","window","sessionStorage","setItem","res","googleId","Kakao","API","request","url","success","fail","err","LoginPage","prop","HeaderContainer","LoginButton","LoginLink","Header","loginStatus","onLogin","onLogout","getItem","resetId","init","Auth","getStatusInfo","user","gapi","auth2","getAuthInstance","signOut","clear","load","client_id","logout","GlobalStyle","createGlobalStyle","App","Fragment","path","component","exact","Boolean","location","hostname","rootReducer","combineReducers","action","find","customHistory","createBrowserHistory","basename","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","withExtraArgument","logger","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35fe614f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Movie({ movie, isLogin, comments, onChange, onClick, onDelete }) {\r\n  console.log(\"components/Movie\");\r\n\r\n  return (\r\n    <MovieContainer>\r\n      <MovieInfo>\r\n        <Img src={movie.poster} alt={movie.title} />\r\n        <Title>{movie.title}</Title>\r\n\r\n        <List>\r\n          <li>개봉일 : {movie.openDt}</li>\r\n          <li>\r\n            장르 : {movie.genre} / {movie.runtime}분\r\n          </li>\r\n          <li>등급 : {movie.grade}</li>\r\n          <li>감독 : {movie.director}</li>\r\n          <li>\r\n            배우 : {movie.actors[0]}, {movie.actors[1]}\r\n          </li>\r\n        </List>\r\n        <Plot>줄거리</Plot>\r\n        <PlotContent>{movie.plot}</PlotContent>\r\n      </MovieInfo>\r\n      <Comment>\r\n        <CommentBox>\r\n          <CommentText\r\n            onChange={onChange}\r\n            placeholder={\r\n              isLogin\r\n                ? \"영화 리뷰를 작성해 주세요.\"\r\n                : \"로그인 후 이용가능한 서비스입니다.\"\r\n            }\r\n            readOnly={!isLogin}\r\n          />\r\n          <CommnetButton onClick={onClick}>입력</CommnetButton>\r\n        </CommentBox>\r\n\r\n        <CommentList>\r\n          {comments.map((content, index) => (\r\n            <CommentItem key={index}>\r\n              <p> {content.text}</p>\r\n              <CommentDelete onClick={onDelete}>삭제</CommentDelete>\r\n            </CommentItem>\r\n          ))}\r\n        </CommentList>\r\n      </Comment>\r\n    </MovieContainer>\r\n  );\r\n}\r\n\r\nconst MovieContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst MovieInfo = styled.div`\r\n  box-sizing: border-box;\r\n  width: 1000px;\r\n  display: grid;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  grid-template-columns: 230px 1fr;\r\n  grid-template-rows: repeat(4, fit-content(100%));\r\n  grid-template-areas:\r\n    \"img title\"\r\n    \"img ul\"\r\n    \"plot plot\"\r\n    \"plotContent plotContent\";\r\n`;\r\n\r\nconst Img = styled.img`\r\n  grid-area: img;\r\n  /* grid-row: 1/3; */\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  grid-area: title;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: table;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  list-style: none;\r\n  border-top: 1px solid #d9d9d9;\r\n  border-bottom: 1px solid #d9d9d9;\r\n  padding-left: 0;\r\n  grid-area: ul;\r\n`;\r\n\r\nconst Plot = styled.h3`\r\n  /* grid-column: 1/3; */\r\n  grid-area: plot;\r\n`;\r\n\r\nconst PlotContent = styled.p`\r\n  /* grid-column: 1/3; */\r\n  grid-area: plotContent;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n  padding: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-content: center;\r\n  width: 850px;\r\n`;\r\nconst CommentBox = styled.div`\r\n  display: flex;\r\n  height: 80px;\r\n`;\r\nconst CommentText = styled.textarea`\r\n  flex: 1;\r\n`;\r\nconst CommnetButton = styled.button`\r\n  width: 80px;\r\n`;\r\nconst CommentList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nconst CommentItem = styled.li`\r\n  border-top: 1px solid #d9d9d9;\r\n  :last-child {\r\n    border-bottom: 1px solid #d9d9d9;\r\n  }\r\n  padding: 20px 0 20px 20px;\r\n`;\r\n\r\nconst CommentDelete = styled.button``;\r\n\r\nexport default Movie;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAmkavb2eiHUtQR2sBbL1AQTi2b0hTe_-A\",\r\n  authDomain: \"boxoffice-app.firebaseapp.com\",\r\n  databaseURL: \"https://boxoffice-app.firebaseio.com\",\r\n  projectId: \"boxoffice-app\",\r\n  storageBucket: \"boxoffice-app.appspot.com\",\r\n  messagingSenderId: \"822311017221\",\r\n  appId: \"1:822311017221:web:ff63afb6e105975e53356c\",\r\n  measurementId: \"G-HYK51T2ZCN\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nconst firestore = firebase.firestore();\r\n\r\nexport default firestore;\r\n","import axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport firestore from \"../Firestore\";\r\n\r\nconst SET_HEADER_VISIBILITY = \"SET_HEADER_VISIBILITY\";\r\n\r\nconst SET_LOGIN = \"SET_LOGIN\";\r\nconst SET_LOGIN_SUCCESS = \"SET_LOGIN_SUCCESS\";\r\nconst SET_LOGIN_ERROR = \"SET_LOGIN_ERROR\";\r\nconst SET_LOGOUT = \"SET_LOGOUT\";\r\n\r\nconst GET_MOVIES = \"GET_MOVIES\";\r\nconst GET_MOVIES_SUCCESS = \"GET_MOVIES_SUCCESS\";\r\nconst GET_MOVIES_ERROR = \"GET_MOVIES_ERROR\";\r\n\r\nconst GET_MOVIE = \"GET_MOVIE\";\r\nconst GET_MOVIE_SUCCESS = \"GET_MOVIE_SUCCESS\";\r\nconst GET_MOVIE_ERROR = \"GET_MOVIE_ERROR\";\r\n\r\nconst GET_COMMENT_SUCCESS = \"GET_COMMENT_SUCCESS\";\r\nconst GET_COMMENT_ERROR = \"GET_COMMENT_ERROR\";\r\n\r\nexport const goToHome = () => (dispatch, getState, { history }) => {\r\n  history.push(\"/\");\r\n};\r\n\r\nexport const setHeaderVisibility = visible => async dispatch => {\r\n  console.log(\"modules/setHeaderVisibility\");\r\n  dispatch({ type: SET_HEADER_VISIBILITY, visible });\r\n};\r\n\r\nexport const setLogin = (provider, id) => async dispatch => {\r\n  console.log(\"modules/setLogin\");\r\n  try {\r\n    firestore\r\n      .collection(\"users\")\r\n      .where(\"id\", \"==\", id)\r\n      .get()\r\n      .then(snapshot => {\r\n        if (snapshot.empty) {\r\n          let docRef = firestore.collection(\"users\").doc();\r\n\r\n          docRef.set(\r\n            {\r\n              provider: provider,\r\n              id: id\r\n            },\r\n            { merge: true }\r\n          );\r\n        }\r\n        // snapshot .forEach(doc  => {\r\n        //   console.log(doc.id, \"=>\", doc .data());\r\n        // });\r\n      });\r\n    dispatch({ type: SET_LOGIN_SUCCESS, id, provider });\r\n  } catch (e) {\r\n    dispatch({ type: SET_LOGIN_ERROR });\r\n  }\r\n};\r\n\r\nexport const setLogout = () => async dispatch => {\r\n  console.log(\"modules/setLogout\");\r\n  dispatch({ type: SET_LOGOUT });\r\n};\r\n\r\nconst setMovies = async rankingData => {\r\n  console.log(\"///////////setMovies///////////////\");\r\n  return new Promise(async resolve => {\r\n    await axios\r\n      .get(\r\n        \"http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json.jsp\",\r\n        {\r\n          params: {\r\n            ServiceKey: \"JIB0YUBGVC07GLD5WFBD\",\r\n            collection: \"kmdb_new\",\r\n            title: rankingData.movieNm,\r\n            releaseDts: rankingData.openDt.replace(/-/gi, \"\")\r\n          }\r\n        }\r\n      )\r\n      .then(data => {\r\n        let items = data.data.Data[0];\r\n        if (items.hasOwnProperty(\"Result\")) {\r\n          const detailData = items.Result[0];\r\n\r\n          console.log(detailData);\r\n          if (detailData.posters.includes(\"|\"))\r\n            detailData.posters = detailData.posters.substring(\r\n              0,\r\n              detailData.posters.indexOf(\"|\")\r\n            );\r\n\r\n          let docRef = firestore.collection(\"movies\").doc(rankingData.movieCd);\r\n          docRef.set(\r\n            {\r\n              id: rankingData.movieCd,\r\n              title: rankingData.movieNm,\r\n              poster: detailData.posters,\r\n              openDt: moment(rankingData.openDt).format(\"YYYY년 M월 D일\"),\r\n              grade: detailData.rating[0].ratingGrade,\r\n              genre: detailData.genre,\r\n              runtime: detailData.runtime,\r\n              director: detailData.director[0].directorNm,\r\n              actors: [\r\n                detailData.actor[0].actorNm,\r\n                detailData.actor[1].actorNm\r\n              ],\r\n              plot: detailData.plot\r\n            },\r\n            { merge: true }\r\n          );\r\n\r\n          resolve(rankingData);\r\n        } else {\r\n          return rankingData;\r\n        }\r\n      });\r\n  });\r\n};\r\n\r\nconst getData = rankingData => {\r\n  return new Promise(resolve =>\r\n    firestore\r\n      .collection(\"movies\")\r\n      .doc(rankingData.movieCd)\r\n      .get()\r\n      .then(async doc => {\r\n        if (!doc.exists) {\r\n          await setMovies(rankingData).then(data => resolve(getData(data)));\r\n        } else {\r\n          const childData = doc.data();\r\n          resolve(childData);\r\n        }\r\n      })\r\n  );\r\n};\r\n\r\nexport const getMovies = date => async dispatch => {\r\n  console.log(\"modules/getMovies\");\r\n  dispatch({ type: GET_MOVIES });\r\n\r\n  if (date === \"\") {\r\n    date = moment().format(\"YYYYMMDD\") - 1;\r\n  }\r\n\r\n  const {\r\n    data: {\r\n      boxOfficeResult: { dailyBoxOfficeList: rankingData }\r\n    }\r\n  } = await axios.get(\r\n    \"http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json\",\r\n    {\r\n      params: {\r\n        key: \"8512edd89b714bf2cf35fcb50adac48d\",\r\n        targetDt: date\r\n      }\r\n    }\r\n  );\r\n\r\n  let payload = [];\r\n  for (let i = 0; i < rankingData.length; i++) {\r\n    await getData(rankingData[i]).then(async data => {\r\n      payload.push(data);\r\n    });\r\n  }\r\n  dispatch({ type: GET_MOVIES_SUCCESS, payload, date });\r\n};\r\n\r\nexport const getMovie = movieId => async dispatch => {\r\n  console.log(\"modules/getMovie\");\r\n  console.log(movieId);\r\n  dispatch({ type: GET_MOVIE });\r\n  try {\r\n    dispatch({ type: GET_MOVIE_SUCCESS, movieId });\r\n  } catch (e) {\r\n    dispatch({ type: GET_MOVIE_ERROR, error: e });\r\n  }\r\n};\r\n\r\nexport const getComment = movieId => async dispatch => {\r\n  console.log(\"getComment\");\r\n  try {\r\n    firestore\r\n      .collection(\"movies\")\r\n      .doc(movieId)\r\n      .get()\r\n      .then(doc => {\r\n        if (doc.data().comments !== undefined) {\r\n          const payload = [];\r\n          doc.data().comments.forEach(comment => {\r\n            payload.push(comment);\r\n          });\r\n          dispatch({ type: GET_COMMENT_SUCCESS, payload });\r\n        }\r\n      });\r\n  } catch (e) {\r\n    dispatch({ type: GET_COMMENT_ERROR, error: e });\r\n  }\r\n};\r\n\r\nexport const addComment = (changComment, movieId) => async dispatch => {\r\n  console.log(\"addComment\");\r\n  try {\r\n    let docRef = firestore.collection(\"movies\").doc(movieId);\r\n    docRef.set(\r\n      {\r\n        comments: changComment\r\n      },\r\n      { merge: true }\r\n    );\r\n    dispatch(getComment(movieId));\r\n  } catch (e) {\r\n    dispatch({ type: GET_COMMENT_ERROR, error: e });\r\n  }\r\n};\r\n\r\nexport const deleteComment = (movieId, id) => async dispatch => {\r\n  try {\r\n    let docRef = firestore.collection(\"movies\").doc(movieId);\r\n    docRef.get().then(doc => {\r\n      const comments = doc.data().comments;\r\n      for (let i = 0; i < comments.length; i++) {\r\n        if (comments[i].writer === id) {\r\n          docRef\r\n            .update({\r\n              comments: comments.filter(comment => comment.writer !== id)\r\n            })\r\n            .then(dispatch(getComment(movieId)));\r\n        }\r\n      }\r\n    });\r\n  } catch (e) {\r\n    dispatch({ type: GET_COMMENT_ERROR, error: e });\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  visible: true,\r\n  login: {\r\n    status: false,\r\n    id: null,\r\n    provider: null\r\n  },\r\n  movies: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n    date: null\r\n  },\r\n  movie: {\r\n    loading: false,\r\n    data: null,\r\n    error: null\r\n  },\r\n\r\n  comments: []\r\n};\r\n\r\nexport default function movies(state = initialState, action) {\r\n  console.log(\"modules/movies\");\r\n  switch (action.type) {\r\n    case SET_HEADER_VISIBILITY:\r\n      return {\r\n        ...state,\r\n        visible: action.visible\r\n      };\r\n    case SET_LOGIN:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: false,\r\n          id: null,\r\n          type: null\r\n        }\r\n      };\r\n    case SET_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: true,\r\n          id: action.id,\r\n          provider: action.provider\r\n        }\r\n      };\r\n    case SET_LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: false,\r\n          id: null\r\n        }\r\n      };\r\n    case SET_LOGOUT:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: false,\r\n          id: null\r\n        }\r\n      };\r\n\r\n    case GET_MOVIES:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        movies: {\r\n          loading: true,\r\n          data: null,\r\n          error: null,\r\n          date: action.date\r\n        }\r\n      };\r\n    case GET_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        movies: {\r\n          loading: false,\r\n          data: action.payload,\r\n          error: null,\r\n          date: action.date\r\n        }\r\n      };\r\n    case GET_MOVIES_ERROR:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        movies: {\r\n          loading: false,\r\n          data: null,\r\n          error: action.error,\r\n          date: action.date\r\n        }\r\n      };\r\n    case GET_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: {\r\n          loading: true,\r\n          data: null,\r\n          error: null\r\n        }\r\n      };\r\n    case GET_MOVIE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        movie: {\r\n          loading: false,\r\n          data: state.movies.data.find(movie => movie.id === action.movieId),\r\n          error: null\r\n        }\r\n      };\r\n    case GET_MOVIE_ERROR:\r\n      return {\r\n        ...state,\r\n        movie: {\r\n          loading: false,\r\n          data: null,\r\n          error: action.error\r\n        }\r\n      };\r\n    case GET_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        comments: action.payload\r\n      };\r\n    case GET_COMMENT_ERROR:\r\n      return {\r\n        ...state,\r\n        comments: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Movie from \"../components/Movie\";\r\nimport {\r\n  getMovie,\r\n  addComment,\r\n  getComment,\r\n  deleteComment\r\n} from \"../modules/movies\";\r\n\r\nfunction MovieContainer({ movieId }) {\r\n  const { data, loading, error } = useSelector(state => state.movies.movie);\r\n  const { status, id } = useSelector(state => state.movies.login);\r\n  const { comments } = useSelector(state => state.movies);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMovie(movieId));\r\n    dispatch(getComment(movieId));\r\n  }, [dispatch, movieId]);\r\n\r\n  let text = null;\r\n  let changComment = [];\r\n  const handleChange = e => {\r\n    console.log(\"handleChange\");\r\n    text = e.target.value;\r\n  };\r\n\r\n  const handleClick = e => {\r\n    console.log(\"handleClick\");\r\n    changComment = comments;\r\n    if (!status) {\r\n      alert(\"로그인 해주세요.\");\r\n    } else if (changComment.length) {\r\n      changComment.forEach(item => {\r\n        if (item.writer === id) {\r\n          alert(\"이미 작성한 리뷰가 존재합니다.\");\r\n        }\r\n      });\r\n    } else {\r\n      changComment.push({ text: text, writer: id });\r\n      dispatch(addComment(changComment, movieId));\r\n    }\r\n  };\r\n\r\n  const handleDelete = e => {\r\n    console.log(\"handDelete\");\r\n    dispatch(deleteComment(movieId, id));\r\n  };\r\n\r\n  if (loading && !data) return <div>로딩중...</div>;\r\n  if (error) return <div>에러 발생</div>;\r\n  if (!data) return <div>데이터 없음</div>;\r\n\r\n  return (\r\n    <Movie\r\n      movie={data}\r\n      isLogin={status}\r\n      writer={id}\r\n      comments={comments}\r\n      onChange={handleChange}\r\n      onClick={handleClick}\r\n      onDelete={handleDelete}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MovieContainer;\r\n","import React from \"react\";\r\nimport MovieContainer from \"../containers/MovieContainer\";\r\n\r\nfunction MoviePage({ match }) {\r\n  console.log(\"pages/MoviePage\");\r\n  const { movieId } = match.params;\r\n\r\n  console.log(match);\r\n  return <MovieContainer movieId={movieId} />;\r\n}\r\n\r\nexport default MoviePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { MdSearch } from \"react-icons/md\";\r\nimport moment from \"moment\";\r\n\r\nfunction MovieList({ onChange, onClick, movies, date }) {\r\n  return (\r\n    <MovieListContainer>\r\n      <Search>\r\n        <SearchData placeholder=\"yyyymmdd\" onChange={onChange} />\r\n        <SearchButton onClick={onClick}>\r\n          <MdSearch />\r\n        </SearchButton>\r\n      </Search>\r\n      <DateInfo>\r\n        {moment(date.toString()).format(\"YYYY년 M월 D일\")}\r\n        기준\r\n      </DateInfo>\r\n      <Movies>\r\n        {movies.map((movie, index) => (\r\n          <Movie key={index}>\r\n            <Rank>{index + 1}</Rank>\r\n            <Link to={`/${movie.id}`}>\r\n              <Poster src={movie.poster} alt={movie.title} />\r\n            </Link>\r\n            <MovieTitle>{movie.title}</MovieTitle>\r\n          </Movie>\r\n        ))}\r\n      </Movies>\r\n    </MovieListContainer>\r\n  );\r\n}\r\n\r\nconst MovieListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-family: \"Nanum Gothic\", sans-serif;\r\n`;\r\nconst Search = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  width: 470px;\r\n  height: 45px;\r\n  border: 2px solid #03cf5d;\r\n  background: white;\r\n  margin-bottom: 80px;\r\n`;\r\nconst SearchData = styled.input`\r\n  flex: 1;\r\n  margin-left: 10px;\r\n  border: 0;\r\n  outline: none;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\nconst SearchButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 50px;\r\n  outline: none;\r\n  border: 0;\r\n  background: #03cf5d;\r\n  cursor: pointer;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 30px;\r\n`;\r\nconst DateInfo = styled.span`\r\n  padding-left: 7%;\r\n  font-size: 18px;\r\n  align-self: flex-start;\r\n`;\r\nconst Movies = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  font-family: \"Nanum Gothic\", sans-serif;\r\n`;\r\nconst Movie = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n  width: 250px;\r\n  margin: 0px 3% 20px;\r\n`;\r\nconst Rank = styled.h1`\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n  width: 44px;\r\n  height: 40px;\r\n  background: #03cf5d;\r\n  color: white;\r\n  opacity: 0.8;\r\n  position: relative;\r\n  top: 22px;\r\n  left: -20px;\r\n`;\r\nconst Poster = styled.img`\r\n  border: 1px solid #d9d9d9;\r\n  height: 300px;\r\n`;\r\nconst MovieTitle = styled.span`\r\n  margin-top: 0;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default MovieList;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getMovies } from \"../modules/movies\";\r\nimport MovieList from \"../components/MovieList\";\r\n\r\nfunction MovieListContainer() {\r\n  console.log(\"MovieListContainer\");\r\n\r\n  const { data, loading, error, date } = useSelector(\r\n    state => state.movies.movies\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  let changeDate = \"\";\r\n  const handleChange = e => {\r\n    console.log(\"handleChange\");\r\n    changeDate = e.target.value;\r\n  };\r\n\r\n  const handleClick = e => {\r\n    console.log(\"handleClick\");\r\n    dispatch(getMovies(changeDate));\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"************************useEffect/////////\");\r\n    if (data) return;\r\n    dispatch(getMovies(changeDate));\r\n  }, [dispatch]);\r\n  //data 의존성 추가하면 날짜값 재설정시 계속 호출됨\r\n  //change 추가하면 계속 오늘자 데이터나옴\r\n\r\n  if (loading && !data) return <div>로딩중...</div>;\r\n  if (error) return <div>에러 발생</div>;\r\n  if (!data) return <div>데이터 없음</div>;\r\n\r\n  return (\r\n    <MovieList\r\n      onChange={handleChange}\r\n      onClick={handleClick}\r\n      movies={data}\r\n      date={date}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MovieListContainer;\r\n","import React from \"react\";\r\nimport MovieListContainer from \"../containers/MovieListContainer\";\r\n\r\nfunction MovieListPage() {\r\n  console.log(\"pages/MovieListPage\");\r\n  return <MovieListContainer />;\r\n}\r\n\r\nexport default MovieListPage;\r\n","import React from \"react\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport KakaoLogin from \"react-kakao-login\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ responseGoogle, responseKakao, responseFail }) {\r\n  return (\r\n    <Container>\r\n      <HomeLink to=\"/\">\r\n        <HomeTitle>BOX OFFICE</HomeTitle>\r\n      </HomeLink>\r\n\r\n      <GoogleLogin\r\n        clientId=\"822311017221-vqnjoe6mjbljr9cp1dvoeahjil2mhh9v.apps.googleusercontent.com\"\r\n        render={renderProps => (\r\n          <GoogleButton\r\n            onClick={renderProps.onClick}\r\n            disabled={renderProps.disabled}\r\n          >\r\n            구글로 시작\r\n          </GoogleButton>\r\n        )}\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseFail}\r\n      />\r\n\r\n      <KakaoButton\r\n        jsKey=\"09cacdaaabf08e5b95d7d9c603f1361b\"\r\n        buttonText=\"카카오로 시작\"\r\n        onSuccess={responseKakao}\r\n        onFailure={responseFail}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst HomeTitle = styled.span`\r\n  font-size: 65px;\r\n  font-family: \"Viga\", sans-serif;\r\n  letter-spacing: 5px;\r\n  margin: 30px;\r\n`;\r\n\r\nconst HomeLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #03cf5d;\r\n`;\r\nconst KakaoButton = styled(KakaoLogin)`\r\n  padding: 0;\r\n  margin: 10px;\r\n  width: 230px;\r\n  height: 49px;\r\n  line-height: 49px;\r\n  color: #3c1e1e;\r\n  background-color: white;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst GoogleButton = styled.button`\r\n  padding: 0;\r\n  margin: 10px;\r\n  width: 230px;\r\n  height: 49px;\r\n  line-height: 49px;\r\n  color: #3c1e1e;\r\n  background-color: white;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Login from \"../components/Login\";\r\nimport { setHeaderVisibility, setLogin, goToHome } from \"../modules/movies\";\r\n\r\nfunction LoginContainer() {\r\n  console.log(\"containers/LoginContainer\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setHeaderVisibility(false));\r\n    return () => {\r\n      dispatch(setHeaderVisibility(true));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const responseGoogle = res => {\r\n    console.log(res);\r\n    loginProvider(\"google\", res.googleId);\r\n  };\r\n\r\n  const responseKakao = res => {\r\n    console.log(res);\r\n    window.Kakao.API.request({\r\n      url: \"/v2/user/me\",\r\n      success: res => {\r\n        console.log(res);\r\n        loginProvider(\"kakao\", res.id);\r\n      },\r\n      fail: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const responseFail = err => {\r\n    console.error(err);\r\n  };\r\n\r\n  const loginProvider = (provider, id) => {\r\n    window.sessionStorage.setItem(\"provider\", provider);\r\n\r\n    // window.localStorage.setItem(\"kakaoAuth\", res);\r\n\r\n    dispatch(goToHome());\r\n    dispatch(setLogin(provider, id));\r\n  };\r\n\r\n  return (\r\n    <Login\r\n      responseGoogle={responseGoogle}\r\n      responseKakao={responseKakao}\r\n      responseFail={responseFail}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport LoginContainer from \"../containers/LoginContainer\";\r\n\r\nfunction LoginPage(prop) {\r\n  console.log(\"pages/LoginPage\");\r\n  console.log(prop);\r\n  return <LoginContainer />;\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Header({ loginStatus, onLogin, onLogout }) {\r\n  return (\r\n    <HeaderContainer>\r\n      {loginStatus ? (\r\n        <LoginButton onClick={onLogout}>\r\n          <LoginLink to=\"/\">로그아웃</LoginLink>\r\n        </LoginButton>\r\n      ) : (\r\n        <LoginButton onClick={onLogin}>\r\n          <LoginLink to=\"/login\">로그인 / 가입</LoginLink>\r\n        </LoginButton>\r\n      )}\r\n      <HomeTitle>\r\n        <HomeLink to=\"/\">BOX OFFICE</HomeLink>\r\n      </HomeTitle>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nconst HeaderContainer = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst LoginButton = styled.button`\r\n  position: relative;\r\n  right: -100%;\r\n  padding: 7px;\r\n  box-sizing: border-box;\r\n  font-size: 17px;\r\n  font-family: \"Nanum Gothic\", sans-serif;\r\n  font-weight: 800;\r\n  background: #03cf5d;\r\n  border: 3px solid #03cf5d;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst LoginLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: white;\r\n`;\r\n\r\nconst HomeTitle = styled.h1`\r\n  font-size: 65px;\r\n  font-family: \"Viga\", sans-serif;\r\n  letter-spacing: 5px;\r\n  margin: 30px;\r\n`;\r\n\r\nconst HomeLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #03cf5d;\r\n`;\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Header from \"../components/Header\";\r\nimport { setLogout, setLogin } from \"../modules/movies\";\r\n\r\nfunction HeaderContainer() {\r\n  console.log(\"/containers/HeaderContainer\");\r\n  const { visible } = useSelector(state => state.movies);\r\n  const { status, provider, id } = useSelector(state => state.movies.login);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!status) {\r\n      const provider = window.sessionStorage.getItem(\"provider\");\r\n      if (provider) {\r\n        if (!id) {\r\n          let resetId = null;\r\n          if (provider === \"kakao\") {\r\n            if (!window.Kakao.hasOwnProperty(\"Auth\")) {\r\n              window.Kakao.init(\"09cacdaaabf08e5b95d7d9c603f1361b\");\r\n            }\r\n            window.Kakao.Auth.getStatusInfo(data => {\r\n              resetId = data.user.id;\r\n              dispatch(setLogin(provider, resetId));\r\n            });\r\n          } else {\r\n            if (window.gapi.hasOwnProperty(\"auth2\")) {\r\n              const logout = window.gapi.auth2.getAuthInstance();\r\n              logout.signOut();\r\n              console.log(\"구글 로그아웃 성공\");\r\n              dispatch(setLogout());\r\n              window.sessionStorage.clear();\r\n            } else {\r\n              window.gapi.load(\"auth2\", () => {\r\n                window.gapi.auth2.init({\r\n                  client_id:\r\n                    \"822311017221-vqnjoe6mjbljr9cp1dvoeahjil2mhh9v.apps.googleusercontent.com\"\r\n                });\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          dispatch(setLogin(provider, id));\r\n        }\r\n      }\r\n    }\r\n  }, [dispatch, id, status]);\r\n\r\n  if (!visible) return null;\r\n\r\n  const onLogout = () => {\r\n    console.log(\"onLogout\");\r\n    if (provider === \"kakao\") {\r\n      window.Kakao.Auth.logout();\r\n      console.log(\"카카오 로그아웃 성공\");\r\n      dispatch(setLogout());\r\n      window.sessionStorage.clear();\r\n    } else {\r\n      const logout = window.gapi.auth2.getAuthInstance();\r\n      logout.signOut();\r\n      console.log(\"구글 로그아웃 성공\");\r\n      dispatch(setLogout());\r\n      window.sessionStorage.clear();\r\n    }\r\n  };\r\n  // switch (provider) {\r\n  //   case \"kakao\":\r\n  //     return window.Kakao.Auth.logout();\r\n  //   case \"google\":\r\n  //     const logout = window.gapi.auth2.getAuthInstance();\r\n  //     logout.signOut();\r\n  //     return console.log(\"구글 로그아웃 성공\");\r\n  //   default:\r\n  //     break;\r\n  // }\r\n  // dispatch(setLogout());\r\n  // window.sessionStorage.clear();\r\n\r\n  return <Header loginStatus={status} onLogout={onLogout} />;\r\n}\r\n\r\nexport default HeaderContainer;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MoviePage from \"./pages/MoviePage\";\nimport MovieListPage from \"./pages/MovieListPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport HeaderContainer from \"./containers/HeaderContainer\";\n\nfunction App() {\n  console.log(\"App\");\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <Container>\n        <HeaderContainer />\n        <Switch>\n          <Route path=\"/\" component={MovieListPage} exact />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/:movieId\" component={MoviePage} />\n        </Switch>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #eff3f7;\n    }\n    `;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 30px;\n  align-items: center;\n  justify-content: center;\n`;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport movies from \"./movies\";\r\n\r\nconsole.log(\"modules/index\");\r\nconst rootReducer = combineReducers({ movies });\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./modules\";\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport ReduxThunk from \"redux-thunk\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst customHistory = createBrowserHistory({ basename: \"/boxoffice\" });\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      ReduxThunk.withExtraArgument({ history: customHistory }),\n      logger\n    )\n  )\n);\n//Thunk내부에서 history를 사용할 수 있다.\n\nReactDOM.render(\n  <Router history={customHistory}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}