{"version":3,"sources":["components/Movie.js","Firestore.js","modules/movies.js","containers/MovieContainer.js","pages/MoviePage.js","components/MovieList.js","containers/MovieListContainer.js","pages/MovieListPage.js","components/Login.js","containers/LoginContainer.js","pages/LoginPage.js","components/Header.js","containers/HeaderContainer.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["MovieContainer","styled","div","MovieInfo","Img","img","Title","h2","List","ul","Plot","h3","PlotContent","p","Comment","CommentBox","CommentText","textarea","CommnetButton","button","CommentList","CommentItem","li","Movie","movie","isLogin","comment","onChange","onClick","console","log","src","poster","alt","title","openDt","genre","runtime","grade","director","actors","plot","placeholder","readOnly","map","content","index","key","text","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","SET_HEADER_VISIBILITY","SET_LOGIN","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","SET_LOGOUT","GET_MOVIES","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIE","GET_MOVIE_SUCCESS","GET_MOVIE_ERROR","GET_COMMENT_SUCCESS","GET_COMMENT_ERROR","goToHome","dispatch","getState","history","push","setHeaderVisibility","visible","a","type","setLogin","provider","id","collection","where","get","then","snapshot","empty","doc","set","merge","e","setLogout","setMovies","date","axios","params","targetDt","rankingData","data","boxOfficeResult","dailyBoxOfficeList","getData","i","ServiceKey","movieNm","releaseDts","replace","items","Data","hasOwnProperty","detailData","Result","posters","includes","substring","indexOf","toString","rank","parseInt","moment","format","rating","ratingGrade","directorNm","actor","actorNm","length","Promise","all","getMovies","orderBy","rows","forEach","childData","payload","getMovie","error","getComment","undefined","addComment","changComment","initialState","login","status","movies","loading","useSelector","state","useDispatch","useEffect","writer","target","value","alert","MoviePage","match","MovieList","className","to","MovieListContainer","changeDate","MovieListPage","Container","KakaoButton","KakaoLogin","GoogleButton","Login","responseGoogle","responseKakao","responseFail","clientId","render","renderProps","disabled","onSuccess","onFailure","jsKey","buttonText","LoginContainer","loginProvider","window","sessionStorage","setItem","res","googleId","Kakao","API","request","url","success","fail","err","LoginPage","prop","Header","loginStatus","onLogin","onLogout","test","location","pathname","HeaderContainer","getItem","resetId","init","Auth","getStatusInfo","user","gapi","auth2","getAuthInstance","signOut","clear","load","client_id","logout","GlobalStyle","createGlobalStyle","App","Fragment","path","component","exact","Boolean","hostname","rootReducer","combineReducers","action","find","customHistory","createBrowserHistory","basename","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","withExtraArgument","logger","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bedc0a4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Movie({ movie, isLogin, comment, onChange, onClick }) {\r\n  console.log(\"components/Movie\");\r\n\r\n  return (\r\n    <MovieContainer>\r\n      <MovieInfo>\r\n        <Img src={movie.poster} alt={movie.title} />\r\n        <Title>{movie.title}</Title>\r\n\r\n        <List>\r\n          <li>개봉일 : {movie.openDt}</li>\r\n          <li>\r\n            장르 : {movie.genre} / {movie.runtime}분\r\n          </li>\r\n          <li>등급 : {movie.grade}</li>\r\n          <li>감독 : {movie.director}</li>\r\n          <li>\r\n            배우 : {movie.actors[0]}, {movie.actors[1]}\r\n          </li>\r\n        </List>\r\n        <Plot>줄거리</Plot>\r\n        <PlotContent>{movie.plot}</PlotContent>\r\n      </MovieInfo>\r\n      <Comment>\r\n        <CommentBox>\r\n          <CommentText\r\n            onChange={onChange}\r\n            placeholder={\r\n              isLogin\r\n                ? \"영화 리뷰를 작성해 주세요.\"\r\n                : \"로그인 후 이용가능한 서비스입니다.\"\r\n            }\r\n            readOnly={!isLogin}\r\n          />\r\n          <CommnetButton onClick={onClick}>입력</CommnetButton>\r\n        </CommentBox>\r\n\r\n        <CommentList>\r\n          {comment.map((content, index) => (\r\n            <CommentItem key={index}>\r\n              <p> {content.text}</p>\r\n            </CommentItem>\r\n          ))}\r\n        </CommentList>\r\n      </Comment>\r\n    </MovieContainer>\r\n  );\r\n}\r\n\r\nconst MovieContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst MovieInfo = styled.div`\r\n  box-sizing: border-box;\r\n  width: 1000px;\r\n  display: grid;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  grid-template-columns: 230px 1fr;\r\n  grid-template-rows: repeat(4, fit-content(100%));\r\n  grid-template-areas:\r\n    \"img title\"\r\n    \"img ul\"\r\n    \"plot plot\"\r\n    \"plotContent plotContent\";\r\n`;\r\n\r\nconst Img = styled.img`\r\n  grid-area: img;\r\n  /* grid-row: 1/3; */\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  grid-area: title;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: table;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  list-style: none;\r\n  border-top: 1px solid #d9d9d9;\r\n  border-bottom: 1px solid #d9d9d9;\r\n  padding-left: 0;\r\n  grid-area: ul;\r\n`;\r\n\r\nconst Plot = styled.h3`\r\n  /* grid-column: 1/3; */\r\n  grid-area: plot;\r\n`;\r\n\r\nconst PlotContent = styled.p`\r\n  /* grid-column: 1/3; */\r\n  grid-area: plotContent;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n  padding: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-content: center;\r\n  width: 850px;\r\n`;\r\nconst CommentBox = styled.div`\r\n  display: flex;\r\n  height: 80px;\r\n`;\r\nconst CommentText = styled.textarea`\r\n  flex: 1;\r\n`;\r\nconst CommnetButton = styled.button`\r\n  width: 80px;\r\n`;\r\nconst CommentList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nconst CommentItem = styled.li`\r\n  border-top: 1px solid #d9d9d9;\r\n  :last-child {\r\n    border-bottom: 1px solid #d9d9d9;\r\n  }\r\n  padding: 20px 0 20px 20px;\r\n`;\r\n\r\nexport default Movie;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAmkavb2eiHUtQR2sBbL1AQTi2b0hTe_-A\",\r\n  authDomain: \"boxoffice-app.firebaseapp.com\",\r\n  databaseURL: \"https://boxoffice-app.firebaseio.com\",\r\n  projectId: \"boxoffice-app\",\r\n  storageBucket: \"boxoffice-app.appspot.com\",\r\n  messagingSenderId: \"822311017221\",\r\n  appId: \"1:822311017221:web:ff63afb6e105975e53356c\",\r\n  measurementId: \"G-HYK51T2ZCN\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nconst firestore = firebase.firestore();\r\n\r\nexport default firestore;\r\n","import axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport firestore from \"../Firestore\";\r\n\r\nconst SET_HEADER_VISIBILITY = \"SET_HEADER_VISIBILITY\";\r\n\r\nconst SET_LOGIN = \"SET_LOGIN\";\r\nconst SET_LOGIN_SUCCESS = \"SET_LOGIN_SUCCESS\";\r\nconst SET_LOGIN_ERROR = \"SET_LOGIN_ERROR\";\r\nconst SET_LOGOUT = \"SET_LOGOUT\";\r\n\r\nconst GET_MOVIES = \"GET_MOVIES\";\r\nconst GET_MOVIES_SUCCESS = \"GET_MOVIES_SUCCESS\";\r\nconst GET_MOVIES_ERROR = \"GET_MOVIES_ERROR\";\r\n\r\nconst GET_MOVIE = \"GET_MOVIE\";\r\nconst GET_MOVIE_SUCCESS = \"GET_MOVIE_SUCCESS\";\r\nconst GET_MOVIE_ERROR = \"GET_MOVIE_ERROR\";\r\n\r\nconst GET_COMMENT_SUCCESS = \"GET_COMMENT_SUCCESS\";\r\nconst GET_COMMENT_ERROR = \"GET_COMMENT_ERROR\";\r\n\r\nexport const goToHome = () => (dispatch, getState, { history }) => {\r\n  history.push(\"/\");\r\n};\r\n\r\nexport const setHeaderVisibility = visible => async dispatch => {\r\n  console.log(\"modules/setHeaderVisibility\");\r\n  dispatch({ type: SET_HEADER_VISIBILITY, visible });\r\n};\r\n\r\nexport const setLogin = (provider, id) => async dispatch => {\r\n  console.log(\"modules/setLogin\");\r\n  try {\r\n    firestore\r\n      .collection(\"users\")\r\n      .where(\"id\", \"==\", id)\r\n      .get()\r\n      .then(snapshot => {\r\n        if (snapshot.empty) {\r\n          let docRef = firestore.collection(\"users\").doc();\r\n\r\n          docRef.set(\r\n            {\r\n              provider: provider,\r\n              id: id\r\n            },\r\n            { merge: true }\r\n          );\r\n        }\r\n        // snapshot .forEach(doc  => {\r\n        //   console.log(doc.id, \"=>\", doc .data());\r\n        // });\r\n      });\r\n    dispatch({ type: SET_LOGIN_SUCCESS, id, provider });\r\n  } catch (e) {\r\n    dispatch({ type: SET_LOGIN_ERROR });\r\n  }\r\n};\r\n\r\nexport const setLogout = () => async dispatch => {\r\n  console.log(\"modules/setLogout\");\r\n  dispatch({ type: SET_LOGOUT });\r\n};\r\n\r\nexport const setMovies = date => async dispatch => {\r\n  console.log(\"///////////setMovies///////////////\");\r\n  const {\r\n    data: {\r\n      boxOfficeResult: { dailyBoxOfficeList: rankingData }\r\n    }\r\n  } = await axios.get(\r\n    \"http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json\",\r\n    {\r\n      params: {\r\n        key: \"8512edd89b714bf2cf35fcb50adac48d\",\r\n        targetDt: date\r\n      }\r\n    }\r\n  );\r\n\r\n  const getData = async () => {\r\n    console.log(rankingData);\r\n    for (let i = 0; i < rankingData.length; i++) {\r\n      await axios\r\n        .get(\r\n          \"http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json.jsp\",\r\n          {\r\n            params: {\r\n              ServiceKey: \"JIB0YUBGVC07GLD5WFBD\",\r\n              collection: \"kmdb_new\",\r\n              title: rankingData[i].movieNm,\r\n              releaseDts: rankingData[i].openDt.replace(/-/gi, \"\")\r\n            }\r\n          }\r\n        )\r\n        .then(data => {\r\n          let items = data.data.Data[0];\r\n          if (items.hasOwnProperty(\"Result\")) {\r\n            const detailData = items.Result[0];\r\n\r\n            console.log(detailData);\r\n            if (detailData.posters.includes(\"|\"))\r\n              detailData.posters = detailData.posters.substring(\r\n                0,\r\n                detailData.posters.indexOf(\"|\")\r\n              );\r\n\r\n            let docRef = firestore\r\n              .collection(\"movies\")\r\n              .doc(date.toString())\r\n              .collection(\"movieList\")\r\n              .doc(rankingData[i].rank);\r\n\r\n            docRef.set(\r\n              {\r\n                rank: parseInt(rankingData[i].rank),\r\n                title: rankingData[i].movieNm,\r\n                poster: detailData.posters,\r\n                openDt: moment(rankingData[i].openDt).format(\"YYYY년 M월 D일\"),\r\n                grade: detailData.rating[0].ratingGrade,\r\n                genre: detailData.genre,\r\n                runtime: detailData.runtime,\r\n                director: detailData.director[0].directorNm,\r\n                actors: [\r\n                  detailData.actor[0].actorNm,\r\n                  detailData.actor[1].actorNm\r\n                ],\r\n                plot: detailData.plot\r\n              },\r\n              { merge: true }\r\n            );\r\n          } else {\r\n            return rankingData[i];\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  Promise.all([rankingData, getData()]).then(() => {\r\n    console.log(\"프로미스 확인\");\r\n    dispatch(getMovies(date));\r\n  });\r\n};\r\n\r\nexport const getMovies = date => async dispatch => {\r\n  console.log(\"modules/getMovies\");\r\n\r\n  if (date === \"\") {\r\n    date = moment().format(\"YYYYMMDD\") - 1;\r\n  }\r\n\r\n  dispatch({ type: GET_MOVIES });\r\n\r\n  // console.log(\"///////////테스트중/////////////\");\r\n  // firestore\r\n  //   .collection(\"movies\")\r\n  //   .doc(date.toString())\r\n  //   .collection(\"movieList\")\r\n  //   .orderBy(\"rank\", \"asc\")\r\n  //   .onSnapshot(querySnapshot => {\r\n  //     console.log(querySnapshot);\r\n  //     querySnapshot.docChanges().forEach(change => {\r\n  //       console.log(change);\r\n  //     });\r\n  //   });\r\n  // console.log(\"///////////테스트중/////////////\");\r\n\r\n  firestore\r\n    .collection(\"movies\")\r\n    .doc(date.toString())\r\n    .collection(\"movieList\")\r\n    .orderBy(\"rank\", \"asc\")\r\n    .get()\r\n    .then(snapshot => {\r\n      if (snapshot.empty) {\r\n        dispatch(setMovies(date));\r\n      } else {\r\n        const rows = [];\r\n        snapshot.forEach(doc => {\r\n          const childData = doc.data();\r\n          rows.push(childData);\r\n        });\r\n        const payload = rows;\r\n        dispatch({ type: GET_MOVIES_SUCCESS, payload, date });\r\n      }\r\n    });\r\n};\r\n\r\nexport const getMovie = rank => async dispatch => {\r\n  console.log(\"modules/getMovie\");\r\n  dispatch({ type: GET_MOVIE });\r\n  try {\r\n    dispatch({ type: GET_MOVIE_SUCCESS, rank });\r\n  } catch (e) {\r\n    dispatch({ type: GET_MOVIE_ERROR, error: e });\r\n  }\r\n};\r\n\r\nexport const getComment = (date, rank) => async dispatch => {\r\n  console.log(\"getComment\");\r\n  try {\r\n    firestore\r\n      .collection(\"movies\")\r\n      .doc(date.toString())\r\n      .collection(\"movieList\")\r\n      .where(\"rank\", \"==\", rank)\r\n      .get()\r\n      .then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          if (doc.data().comment !== undefined) {\r\n            const comment = doc.data().comment;\r\n            const payload = comment;\r\n            dispatch({ type: GET_COMMENT_SUCCESS, payload });\r\n          }\r\n        });\r\n      });\r\n  } catch (e) {\r\n    dispatch({ type: GET_COMMENT_ERROR, error: e });\r\n  }\r\n};\r\n\r\nexport const addComment = (changComment, rank, date) => async dispatch => {\r\n  try {\r\n    let docRef = firestore\r\n      .collection(\"movies\")\r\n      .doc(date.toString())\r\n      .collection(\"movieList\")\r\n      .doc(rank.toString());\r\n\r\n    docRef.set(\r\n      {\r\n        comment: changComment\r\n      },\r\n      { merge: true }\r\n    );\r\n\r\n    dispatch(getComment(date, rank));\r\n  } catch (e) {\r\n    dispatch({ type: GET_COMMENT_ERROR, error: e });\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  visible: true,\r\n  login: {\r\n    status: false,\r\n    id: null,\r\n    provider: null\r\n  },\r\n  movies: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n    date: null\r\n  },\r\n  movie: {\r\n    loading: false,\r\n    data: null,\r\n    error: null\r\n  },\r\n  comment: []\r\n};\r\n\r\nexport default function movies(state = initialState, action) {\r\n  console.log(\"modules/movies\");\r\n  switch (action.type) {\r\n    case SET_HEADER_VISIBILITY:\r\n      return {\r\n        ...state,\r\n        visible: action.visible\r\n      };\r\n    case SET_LOGIN:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: false,\r\n          id: null,\r\n          type: null\r\n        }\r\n      };\r\n    case SET_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: true,\r\n          id: action.id,\r\n          provider: action.provider\r\n        }\r\n      };\r\n    case SET_LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: false,\r\n          id: null\r\n        }\r\n      };\r\n    case SET_LOGOUT:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: false,\r\n          id: null\r\n        }\r\n      };\r\n\r\n    case GET_MOVIES:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        movies: {\r\n          loading: true,\r\n          data: null,\r\n          error: null,\r\n          date: action.date\r\n        }\r\n      };\r\n    case GET_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        movies: {\r\n          loading: false,\r\n          data: action.payload,\r\n          error: null,\r\n          date: action.date\r\n        }\r\n      };\r\n    case GET_MOVIES_ERROR:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        movies: {\r\n          loading: false,\r\n          data: null,\r\n          error: action.error,\r\n          date: action.date\r\n        }\r\n      };\r\n    case GET_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: {\r\n          loading: true,\r\n          data: null,\r\n          error: null\r\n        }\r\n      };\r\n    case GET_MOVIE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        movie: {\r\n          loading: false,\r\n          data: state.movies.data.find(movie => movie.rank === action.rank),\r\n          error: null\r\n        },\r\n        comment: []\r\n      };\r\n    case GET_MOVIE_ERROR:\r\n      return {\r\n        ...state,\r\n        movie: {\r\n          loading: false,\r\n          data: null,\r\n          error: action.error\r\n        }\r\n      };\r\n    case GET_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        comment: action.payload\r\n      };\r\n    case GET_COMMENT_ERROR:\r\n      return {\r\n        ...state,\r\n        comment: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Movie from \"../components/Movie\";\r\nimport { getMovie, addComment, getComment } from \"../modules/movies\";\r\n\r\nfunction MovieContainer({ rank }) {\r\n  const { date } = useSelector(state => state.movies.movies);\r\n  const { data, loading, error } = useSelector(state => state.movies.movie);\r\n  const { status, id } = useSelector(state => state.movies.login);\r\n  const { comment } = useSelector(state => state.movies);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMovie(rank));\r\n    dispatch(getComment(date, rank));\r\n  }, [dispatch, date, rank]);\r\n\r\n  let text = null;\r\n  let changComment = [];\r\n  const handleChange = e => {\r\n    console.log(\"handleChange\");\r\n    text = e.target.value;\r\n  };\r\n\r\n  const handleClick = e => {\r\n    console.log(\"handleClick\");\r\n    if (!status) {\r\n      alert(\"로그인 해주세요.\");\r\n    } else {\r\n      changComment = comment;\r\n      changComment.push({ text: text, writer: id });\r\n      dispatch(addComment(changComment, rank, date, id));\r\n    }\r\n  };\r\n\r\n  if (loading && !data) return <div>로딩중...</div>;\r\n  if (error) return <div>에러 발생</div>;\r\n  if (!data) return <div>데이터 없음</div>;\r\n\r\n  return (\r\n    <Movie\r\n      movie={data}\r\n      isLogin={status}\r\n      writer={id}\r\n      comment={comment}\r\n      onChange={handleChange}\r\n      onClick={handleClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MovieContainer;\r\n","import React from \"react\";\r\nimport MovieContainer from \"../containers/MovieContainer\";\r\n\r\nfunction MoviePage({ match }) {\r\n  console.log(\"pages/MoviePage\");\r\n  const { rank } = match.params;\r\n\r\n  console.log(match);\r\n  return <MovieContainer rank={parseInt(rank)} />;\r\n}\r\n\r\nexport default MoviePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/MovieList.css\";\r\nimport { MdSearch } from \"react-icons/md\";\r\nimport moment from \"moment\";\r\n\r\nfunction MovieList({ onChange, onClick, movies, date }) {\r\n  console.log(\"components/MovieList\");\r\n\r\n  return (\r\n    <div className=\"contents\">\r\n      <div className=\"search\">\r\n        <input\r\n          className=\"inputData\"\r\n          placeholder=\"yyyymmdd\"\r\n          onChange={onChange}\r\n        />\r\n        <button className=\"button\" onClick={onClick}>\r\n          <MdSearch />\r\n        </button>\r\n      </div>\r\n      {/* <span className=\"dateInfo\">\r\n        {moment(date.toString()).format(\"YYYY년 M월 D일\")} 기준\r\n      </span> */}\r\n      <div className=\"movies\">\r\n        {movies.map(movie => (\r\n          <div className=\"movie\" key={movie.rank}>\r\n            <h1 className=\"rank\">{movie.rank}</h1>\r\n            <Link to={`/boxoffice/${movie.rank}`}>\r\n              <img className=\"poster\" src={movie.poster} alt={movie.title} />\r\n            </Link>\r\n            <span className=\"title\">{movie.title}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getMovies } from \"../modules/movies\";\r\nimport MovieList from \"../components/MovieList\";\r\n\r\nfunction MovieListContainer() {\r\n  console.log(\"MovieListContainer\");\r\n\r\n  const { data, loading, error } = useSelector(state => state.movies.movies);\r\n  const dispatch = useDispatch();\r\n\r\n  let changeDate = \"\";\r\n  const handleChange = e => {\r\n    console.log(\"handleChange\");\r\n    changeDate = e.target.value;\r\n  };\r\n\r\n  const handleClick = e => {\r\n    console.log(\"handleClick\");\r\n    dispatch(getMovies(changeDate));\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"************************useEffect/////////\");\r\n    if (data) return;\r\n    dispatch(getMovies(changeDate));\r\n  }, [dispatch]);\r\n  //data 의존성 추가하면 날짜값 재설정시 계속 호출됨\r\n  //change 추가하면 계속 오늘자 데이터나옴\r\n\r\n  if (loading && !data) return <div>로딩중...</div>;\r\n  if (error) return <div>에러 발생</div>;\r\n  if (!data) return <div>데이터 없음</div>;\r\n\r\n  return (\r\n    <MovieList\r\n      onChange={handleChange}\r\n      onClick={handleClick}\r\n      movies={data}\r\n      // date={date}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MovieListContainer;\r\n","import React from \"react\";\r\nimport MovieListContainer from \"../containers/MovieListContainer\";\r\n\r\nfunction MovieListPage() {\r\n  console.log(\"pages/MovieListPage\");\r\n  return <MovieListContainer />;\r\n}\r\n\r\nexport default MovieListPage;\r\n","import React from \"react\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport KakaoLogin from \"react-kakao-login\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst KakaoButton = styled(KakaoLogin)`\r\n  padding: 0;\r\n  margin: 10px;\r\n  width: 230px;\r\n  height: 49px;\r\n  line-height: 49px;\r\n  color: #3c1e1e;\r\n  background-color: white;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst GoogleButton = styled.button`\r\n  padding: 0;\r\n  margin: 10px;\r\n  width: 230px;\r\n  height: 49px;\r\n  line-height: 49px;\r\n  color: #3c1e1e;\r\n  background-color: white;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Login({ responseGoogle, responseKakao, responseFail }) {\r\n  console.log(\"components/Login\");\r\n\r\n  return (\r\n    <Container>\r\n      <Link to=\"/\" className=\"homeLink\">\r\n        <span className=\"homeTitle\">BOX OFFICE</span>\r\n      </Link>\r\n\r\n      <GoogleLogin\r\n        clientId=\"822311017221-vqnjoe6mjbljr9cp1dvoeahjil2mhh9v.apps.googleusercontent.com\"\r\n        render={renderProps => (\r\n          <GoogleButton\r\n            onClick={renderProps.onClick}\r\n            disabled={renderProps.disabled}\r\n          >\r\n            구글로 시작\r\n          </GoogleButton>\r\n        )}\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseFail}\r\n      />\r\n\r\n      <KakaoButton\r\n        jsKey=\"09cacdaaabf08e5b95d7d9c603f1361b\"\r\n        buttonText=\"카카오로 시작\"\r\n        onSuccess={responseKakao}\r\n        onFailure={responseFail}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Login from \"../components/Login\";\r\nimport { setHeaderVisibility, setLogin, goToHome } from \"../modules/movies\";\r\n\r\nfunction LoginContainer() {\r\n  console.log(\"containers/LoginContainer\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setHeaderVisibility(false));\r\n    return () => {\r\n      dispatch(setHeaderVisibility(true));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const responseGoogle = res => {\r\n    console.log(res);\r\n    loginProvider(\"google\", res.googleId);\r\n  };\r\n\r\n  const responseKakao = res => {\r\n    console.log(res);\r\n    window.Kakao.API.request({\r\n      url: \"/v2/user/me\",\r\n      success: res => {\r\n        console.log(res);\r\n        loginProvider(\"kakao\", res.id);\r\n      },\r\n      fail: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const responseFail = err => {\r\n    console.error(err);\r\n  };\r\n\r\n  const loginProvider = (provider, id) => {\r\n    window.sessionStorage.setItem(\"provider\", provider);\r\n\r\n    // window.localStorage.setItem(\"kakaoAuth\", res);\r\n\r\n    dispatch(goToHome());\r\n    dispatch(setLogin(provider, id));\r\n  };\r\n\r\n  return (\r\n    <Login\r\n      responseGoogle={responseGoogle}\r\n      responseKakao={responseKakao}\r\n      responseFail={responseFail}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport LoginContainer from \"../containers/LoginContainer\";\r\n\r\nfunction LoginPage(prop) {\r\n  console.log(\"pages/LoginPage\");\r\n  console.log(prop);\r\n  return <LoginContainer />;\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/Header.css\";\r\n\r\nfunction Header({ loginStatus, onLogin, onLogout }) {\r\n  console.log(\"components/Header\");\r\n  // console.log(\"////////////////////////////////\");\r\n  // console.log(window.location.pathname);\r\n  return (\r\n    <div className=\"header\">\r\n      {loginStatus ? (\r\n        <button className=\"loginButton\" onClick={onLogout}>\r\n          <Link to=\"/\" className=\"loginLink\">\r\n            로그아웃\r\n          </Link>\r\n        </button>\r\n      ) : (\r\n        <button className=\"loginButton\" onClick={onLogin}>\r\n          <Link\r\n            to=\"/login\"\r\n            className=\"loginLink\"\r\n            state={{ test: window.location.pathname }}\r\n          >\r\n            로그인 / 가입\r\n          </Link>\r\n        </button>\r\n      )}\r\n\r\n      <h1 className=\"homeTitle\">\r\n        <Link to=\"/\" className=\"homeLink\">\r\n          BOX OFFICE\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Header from \"../components/Header\";\r\nimport { setLogout, setLogin } from \"../modules/movies\";\r\n\r\nfunction HeaderContainer() {\r\n  console.log(\"/containers/HeaderContainer\");\r\n  const { visible } = useSelector(state => state.movies);\r\n  const { status, provider, id } = useSelector(state => state.movies.login);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!status) {\r\n      const provider = window.sessionStorage.getItem(\"provider\");\r\n      if (provider) {\r\n        if (!id) {\r\n          let resetId = null;\r\n          if (provider === \"kakao\") {\r\n            if (!window.Kakao.hasOwnProperty(\"Auth\")) {\r\n              window.Kakao.init(\"09cacdaaabf08e5b95d7d9c603f1361b\");\r\n            }\r\n            window.Kakao.Auth.getStatusInfo(data => {\r\n              resetId = data.user.id;\r\n              dispatch(setLogin(provider, resetId));\r\n            });\r\n          } else {\r\n            if (window.gapi.hasOwnProperty(\"auth2\")) {\r\n              const logout = window.gapi.auth2.getAuthInstance();\r\n              logout.signOut();\r\n              console.log(\"구글 로그아웃 성공\");\r\n              dispatch(setLogout());\r\n              window.sessionStorage.clear();\r\n            } else {\r\n              window.gapi.load(\"auth2\", () => {\r\n                window.gapi.auth2.init({\r\n                  client_id:\r\n                    \"822311017221-vqnjoe6mjbljr9cp1dvoeahjil2mhh9v.apps.googleusercontent.com\"\r\n                });\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          dispatch(setLogin(provider, id));\r\n        }\r\n      }\r\n    }\r\n  }, [dispatch, id, status]);\r\n\r\n  if (!visible) return null;\r\n\r\n  const onLogout = () => {\r\n    console.log(\"onLogout\");\r\n    if (provider === \"kakao\") {\r\n      window.Kakao.Auth.logout();\r\n      console.log(\"카카오 로그아웃 성공\");\r\n      dispatch(setLogout());\r\n      window.sessionStorage.clear();\r\n    } else {\r\n      const logout = window.gapi.auth2.getAuthInstance();\r\n      logout.signOut();\r\n      console.log(\"구글 로그아웃 성공\");\r\n      dispatch(setLogout());\r\n      window.sessionStorage.clear();\r\n    }\r\n  };\r\n  // switch (provider) {\r\n  //   case \"kakao\":\r\n  //     return window.Kakao.Auth.logout();\r\n  //   case \"google\":\r\n  //     const logout = window.gapi.auth2.getAuthInstance();\r\n  //     logout.signOut();\r\n  //     return console.log(\"구글 로그아웃 성공\");\r\n  //   default:\r\n  //     break;\r\n  // }\r\n  // dispatch(setLogout());\r\n  // window.sessionStorage.clear();\r\n\r\n  return <Header loginStatus={status} onLogout={onLogout} />;\r\n}\r\n\r\nexport default HeaderContainer;\r\n","import React from \"react\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport MoviePage from \"./pages/MoviePage\";\nimport MovieListPage from \"./pages/MovieListPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport HeaderContainer from \"./containers/HeaderContainer\";\n\nfunction App() {\n  console.log(\"App\");\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <Container>\n        <HeaderContainer />\n        <Switch>\n          <Route path=\"/\" component={MovieListPage} exact />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/boxoffice/:rank\" component={MoviePage} />\n        </Switch>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #eff3f7\n  }\n    `;\nconst Container = styled.div`\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 30px;\n  align-items: center;\n  justify-content: center;\n`;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport movies from \"./movies\";\r\n\r\nconsole.log(\"modules/index\");\r\nconst rootReducer = combineReducers({ movies });\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./modules\";\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport ReduxThunk from \"redux-thunk\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst customHistory = createBrowserHistory({ basename: \"/boxoffice\" });\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      ReduxThunk.withExtraArgument({ history: customHistory }),\n      logger\n    )\n  )\n);\n//Thunk내부에서 history를 사용할 수 있다.\n\nconsole.log(\"index2\");\nReactDOM.render(\n  <Router history={customHistory}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}